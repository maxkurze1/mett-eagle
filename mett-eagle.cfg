-- vim:ft=lua
local L4 = require("L4");
local log_level = {
  DEBUG = 0x1F,
  INFO  = 0xF,
  WARN  = 0x7,
  ERROR = 0x3,
  FATAL = 0x1,
}

local l = L4.default_loader;

-- creating initial capability for manager and client to
-- talk to each other
local channel = l:new_channel()
local log_sync = L4.Env.factory:create(L4.Proto.Semaphore);

l:start({
    caps = {
        server = channel:svr(),
        log_sync = log_sync:m("s")
    },
    log = L4.Env.log, -- start without log color or prefix
    -- scheduler = L4.Env.user_factory:create(L4.Proto.Scheduler, 10, 0, 0x8);
}, "rom/mett-eagle",
{
    PKGNAME="Mett-Eagle",
    LOG_LEVEL = log_level.DEBUG
})

l:start({
    caps = {
        manager = channel,
        log_sync = log_sync:m("s"),
        rwfs = L4.Env.rwfs:svr(), -- needed for rwfs/output.txt
        rom = L4.Env.rom, -- also mapped by default
    },
    log = L4.Env.log, -- start without log color or prefix
}, "rom/mett-eagle-client",
{
    PKGNAME = "Client    ",
    LOG_LEVEL = log_level.DEBUG
})

-- local l = L4.Loader.new({mem = L4.Env.user_factory:create(L4.Proto.Factory, 1024*1024):svr()})
-- l:start({
--     caps = {
--     },
--     log = L4.Env.log, -- start without log color or prefix
--     -- mem = L4.Env.user_factory:create(L4.Proto.Factory, 1024*1024)
-- }, "rom/python-faas",
-- {
--     PKGNAME = "Worker    ",
--     LOG_LEVEL = log_level.DEBUG
-- })
-- l:start({
--     caps = {
--     },
--     log = L4.Env.log, -- start without log color or prefix
--     -- mem = L4.Env.user_factory:create(L4.Proto.Factory, 1024*1024)
-- }, "rom/python","rom/test.py")